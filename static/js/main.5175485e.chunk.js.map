{"version":3,"sources":["components/Navbar.js","images/profile.png","images/calender.png","images/notebook.png","images/todolist.png","images/delete1.png","images/profilegreen.png","images/calendergreen.png","images/notebookgreen.png","images/todolistgreen.png","components/useLocalStorage.js","components/Sidebar.js","components/Home.js","components/usePasswordShow.js","components/Login.js","components/SignUp.js","components/Graph.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Sidebar","useEffect","handleProfile","reminderRef","useRef","notebookRef","profilegreen","profileImg","setProfileImg","calender1","calenderImg","setCalenderImg","notebook1","notebookImg","setNotebookImg","todolist1","todolistImg","setTodolistImg","profile","setProfile","calender","setCalender","notebook","setNotebook","todolist","setTodolist","addtodo","setAddtodo","calenderTodo","setCalenderTodo","notebookTodo","setNotebookTodo","listtodo","setListtodo","profileTodo","setProfileTodo","note","setNote","reminder","setReminder","day","setDay","notebookk","setNotebookk","Date","dateState","setDateState","todolists","setTodolists","notes","setNotes","reminders","setReminders","handleDelete","e","newTodos","filter","todo","id","target","handleDeletee","newNotes","handleDeleteee","newReminder","handleAddtodo","handleListtodo","handleProfileTodo","handleCalenderTodo","handleNotebookTodo","handleCalender","profile1","calendergreen","handleNotebook","notebookgreen","handleTodolist","todolistgreen","changeDate","now","getTime","Container","fluid","classname","Row","Image","src","onClick","Col","xs","md","lg","sm","Form","onSubmit","preventDefault","newTodo","length","Math","max","map","t","FloatingLabel","controlId","label","Control","as","required","placeholder","onChange","style","height","Select","Button","variant","type","delete1","moment","format","date","remind","ref","current","focus","newNote","Home","usePasswordShow","passwordShow","setPasswordShow","showPassword","Login","navigate","useNavigate","username","setUsername","password","setPassword","setError","Group","Label","Text","Check","SignUp","firstname","setFirstname","lastname","setLastname","email","setEmail","confirmPassword","setConfirmPassword","match","setMatch","text","setText","alert","onKeyUp","Graph","props","state","options","chart","xaxis","categories","series","name","data","this","width","Component","App","path","element","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5175485e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"bg-white p-2 px-md-2 px-lg-5 py-lg-3\">\r\n                <Link to=\"\">\r\n                    <h3 className=\"text-success logo\">My Schedule!</h3>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export default __webpack_public_path__ + \"static/media/profile.2bb79640.png\";","export default __webpack_public_path__ + \"static/media/calender.38817852.png\";","export default __webpack_public_path__ + \"static/media/notebook.54c271af.png\";","export default __webpack_public_path__ + \"static/media/todolist.d401918d.png\";","export default __webpack_public_path__ + \"static/media/delete1.f4c0de48.png\";","export default __webpack_public_path__ + \"static/media/profilegreen.59cbbbe3.png\";","export default __webpack_public_path__ + \"static/media/calendergreen.bab80040.png\";","export default __webpack_public_path__ + \"static/media/notebookgreen.3b515b93.png\";","export default __webpack_public_path__ + \"static/media/todolistgreen.68fccc39.png\";","import { useState } from \"react\";\r\n\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n} \r\n\r\nexport default useLocalStorage","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Container, Image, Row, Col, Form, Button, FloatingLabel } from 'react-bootstrap'\r\nimport profile1 from '../images/profile.png'\r\nimport calender1 from '../images/calender.png'\r\nimport notebook1 from '../images/notebook.png'\r\nimport todolist1 from '../images/todolist.png'\r\nimport delete1 from '../images/delete1.png'\r\nimport profilegreen from '../images/profilegreen.png'\r\nimport calendergreen from '../images/calendergreen.png'\r\nimport notebookgreen from '../images/notebookgreen.png'\r\nimport todolistgreen from '../images/todolistgreen.png'\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport moment from 'moment'\r\nimport useLocalStorage from './useLocalStorage'\r\n\r\n\r\nconst Sidebar = () => {\r\n    useEffect(() => {\r\n        handleProfile();\r\n    }, []) \r\n\r\n    const reminderRef = useRef(null);\r\n    const notebookRef = useRef(null);\r\n    const [profileImg, setProfileImg] = useState(profilegreen);\r\n    const [calenderImg, setCalenderImg] = useState(calender1);\r\n    const [notebookImg, setNotebookImg] = useState(notebook1);\r\n    const [todolistImg, setTodolistImg] = useState(todolist1);\r\n    const [profile, setProfile] = useState(true);\r\n    const [calender, setCalender] = useState(false);\r\n    const [notebook, setNotebook] = useState(false);\r\n    const [todolist, setTodolist] = useState(false);\r\n    const [addtodo, setAddtodo] = useState(false);\r\n    const [display1, setDisplay1] = useState(false);\r\n    const [calenderTodo, setCalenderTodo] = useState(false)\r\n    const [notebookTodo, setNotebookTodo] = useState(false);\r\n    const [listtodo, setListtodo] = useState(false);\r\n    const [profileTodo, setProfileTodo] = useState(false);\r\n    const [note, setNote] = useState('');\r\n    const [reminder, setReminder] = useState('')\r\n    const [day, setDay] = useState('Sunday')\r\n    const [notebookk, setNotebookk] = useState('')\r\n    const [dateState, setDateState] = useState(new Date())\r\n    const [todolists, setTodolists] = useLocalStorage(\"todos\", [\r\n        \r\n    ]);\r\n    const [notes, setNotes] = useLocalStorage(\"notes\", [\r\n        \r\n    ])\r\n    const [reminders, setReminders] = useLocalStorage(\"reminders\", [\r\n\r\n    ]);\r\n\r\n\r\n    const handleRef1 = () => {\r\n        reminderRef.current.focus();\r\n    }\r\n    const handleRef2 = () => {\r\n        notebookRef.current.focus();\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const nextId = todolists.length > 0 ? Math.max(...todolists.map(t => t.id)) + 1 : 0 \r\n        const newTodo = {id: nextId, note, day}\r\n        setTodolists([...todolists, newTodo])\r\n        handleListtodo();\r\n        setNote('')\r\n        setDay('')\r\n    }\r\n\r\n    const handleSubmitt = (e) => {\r\n        e.preventDefault();\r\n        const nextId = notes.length > 0 ? Math.max(...notes.map(t => t.id)) + 1 : 0 \r\n        const newNote = {id: nextId, note: notebookk}\r\n        setNotes([...notes, newNote])\r\n        setNotebookk('')\r\n    } \r\n\r\n    const handleSubmittt = (e) => {\r\n        e.preventDefault();\r\n        const nextId = reminders.length > 0 ? Math.max(...reminders.map(t => t.id)) + 1 : 0 \r\n        const newReminder = {id: nextId, date: moment(dateState).format('Do MMMM YYYY'), remind: reminder}\r\n        setReminders([...reminders, newReminder]);\r\n        setReminder('')\r\n    }\r\n    \r\n    const refreshPage = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    const handleDelete =  (e) => {\r\n        const newTodos = todolists.filter((todo) => todo.id != e.target.id)\r\n        setTodolists(newTodos)\r\n    }\r\n\r\n    const handleDeletee =  (e) => {\r\n        const newNotes = notes.filter((note) => note.id != e.target.id)\r\n        setNotes(newNotes)\r\n    }\r\n\r\n    const handleDeleteee = (e) => {\r\n        console.log(e.target.id)\r\n        const newReminder = reminders.filter((reminder) => reminder.id != e.target.id)\r\n        setReminders(newReminder)\r\n    }\r\n    \r\n    const handleAddtodo = () => {\r\n        setProfileTodo(false)\r\n        setAddtodo(true);\r\n        setListtodo(false);\r\n        setCalenderTodo(false)\r\n        setNotebookTodo(false)\r\n    }\r\n\r\n    const handleListtodo = () => {\r\n        setProfileTodo(false)\r\n        setAddtodo(false);\r\n        setListtodo(true);\r\n        setCalenderTodo(false)\r\n        setNotebookTodo(false)\r\n    }\r\n\r\n    const handleProfileTodo = () => {\r\n        setProfileTodo(true)\r\n        setAddtodo(false)\r\n        setListtodo(false)\r\n        setCalenderTodo(false)\r\n        setNotebookTodo(false)\r\n    }\r\n\r\n    const handleCalenderTodo = () => {\r\n        setProfileTodo(false)\r\n        setAddtodo(false)\r\n        setListtodo(false)\r\n        setCalenderTodo(true)\r\n        setNotebookTodo(false)\r\n    }\r\n\r\n    const handleNotebookTodo =() => {\r\n        setProfileTodo(false)\r\n        setAddtodo(false)\r\n        setListtodo(false)\r\n        setCalenderTodo(false)\r\n        setNotebookTodo(true)\r\n    }\r\n \r\n    const handleProfile = () => {\r\n        setProfile(true);\r\n        setCalender(false);\r\n        setNotebook(false);\r\n        setTodolist(false);\r\n        handleProfileTodo();\r\n        setProfileImg(profilegreen);\r\n        setCalenderImg(calender1)\r\n        setNotebookImg(notebook1);\r\n        setTodolistImg(todolist1);\r\n    }\r\n\r\n    const handleCalender = () => {\r\n        setProfile(false);\r\n        setCalender(true);\r\n        setNotebook(false);\r\n        setTodolist(false);\r\n        handleCalenderTodo();\r\n        setProfileImg(profile1);\r\n        setCalenderImg(calendergreen)\r\n        setNotebookImg(notebook1);\r\n        setTodolistImg(todolist1);\r\n    }\r\n\r\n    const handleNotebook = () => {\r\n        setProfile(false);\r\n        setCalender(false);\r\n        setNotebook(true);\r\n        setTodolist(false);\r\n        handleNotebookTodo();\r\n        setProfileImg(profile1);\r\n        setCalenderImg(calender1)\r\n        setNotebookImg(notebookgreen);\r\n        setTodolistImg(todolist1);\r\n    }\r\n\r\n    const handleTodolist = () => {\r\n        setProfile(false);\r\n        setCalender(false);\r\n        setNotebook(false);\r\n        setTodolist(true);\r\n        handleListtodo();\r\n        setProfileImg(profile1);\r\n        setCalenderImg(calender1)\r\n        setNotebookImg(notebook1);\r\n        setTodolistImg(todolistgreen);\r\n    }\r\n\r\n    const changeDate = (e) => {\r\n        setDateState(e)\r\n        const now = new Date();\r\n        console.log(now.getTime(), dateState.getTime());\r\n        if (dateState.getTime() === now.getTime()){\r\n            console.log('hello there')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container fluid classname=\"bg-light\">\r\n                <Row className=\"bg-white\">\r\n                    <div className=\"d-flex justify-content-between shadow-sm poss d-md-none bg-white\">\r\n                        <Image src={profileImg} onClick={handleProfile} className=\"iconsm my-3\" fluid/>\r\n                        <Image src={calenderImg} onClick={handleCalender} className=\"iconsm my-3\" fluid/>\r\n                        <Image src={notebookImg} onClick={handleNotebook} className=\"iconsm my-3\" fluid/>\r\n                        <Image src={todolistImg} onClick={handleTodolist} className=\"iconsm my-3\" fluid/>\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"bg-white\">\r\n                    <Col xs={12} md={2} lg={2}>\r\n                        <div className=\"d-none d-md-flex justify-content-between flex-md-column align-items-center shadow-sm p-4\">\r\n                            <Image src={profileImg} onClick={handleProfile} className=\"icon my-3\" fluid/>\r\n                            <Image src={calenderImg} onClick={handleCalender} className=\"icon my-3\" fluid/>\r\n                            <Image src={notebookImg} onClick={handleNotebook} className=\"icon my-3\" fluid/>\r\n                            <Image src={todolistImg} onClick={handleTodolist} className=\"icon my-3\" fluid/>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={12} sm={6} md={2} lg={2} className=\"shadow-sm bg-white\">\r\n                        {profile && <div>\r\n                            <p className=\"font-500 font-20 pointer d-none d-md-block text-secondary\" onClick={handleProfileTodo}>Profile</p>\r\n                            <p className=\"font-500 font-16 pointer d-md-none text-secondary\" onClick={handleProfileTodo}>Profile</p>\r\n                        </div>}\r\n                        {calender && <div>\r\n                            <p className=\"font-500 font-20 pointer text-secondary d-none d-md-block\" onClick={handleCalenderTodo}>Set Reminder</p>\r\n                            <p className=\"font-500 font-16 pointer text-secondary d-md-none\" onClick={handleCalenderTodo}>Set Reminder</p>\r\n\r\n                        </div>}\r\n                        {notebook && <div>\r\n                            <p className=\"font-500 font-20 pointer text-secondary d-none d-md-block\" onClick={handleNotebookTodo}>Notebook</p>\r\n                            <p className=\"font-500 font-16 pointer text-secondary d-md-none\" onClick={handleNotebookTodo}>Notebook</p>\r\n                        </div>}\r\n                        {todolist && <div>\r\n                            <p className=\"font-500 font-20 pointer text-secondary d-none d-md-block\" onClick={handleListtodo}>Todolist</p>\r\n                            <p className=\"font-500 font-20 pointer text-black d-none d-md-block\" onClick={handleAddtodo}>Create</p>\r\n                            <p className=\"font-500 font-16 pointer text-secondary d-md-none\" onClick={handleListtodo}>Todolist</p>\r\n                            <p className=\"font-500 font-16 pointer text-black d-md-none\" onClick={handleAddtodo}>Create</p>\r\n                        </div>}\r\n                    </Col>\r\n                    <Col xs={12} sm={6} md={8} lg={8} className=\"py-md-1 ps-md-2 py-3 shadow-sm\">\r\n                        {addtodo && <Row>\r\n                            <Col xs={12} sm={6} md={8} lg={6} className=\"d-md-flex justify-content-center\">\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <FloatingLabel controlId=\"floatingTextarea2\" label=\"Todo?\">\r\n                                        <Form.Control\r\n                                        as=\"textarea\"\r\n                                        required\r\n                                        placeholder=\"Leave a comment here\"\r\n                                        className=\"mb-3\" value={note} onChange={e => setNote(e.target.value)}\r\n                                        style={{ height: '100px' }}\r\n                                        />\r\n                                    </FloatingLabel>\r\n                                    <Form.Select className=\"mb-3\" value={day} onChange={e => setDay(e.target.value)} required>\r\n                                        <option value=\"Sunday\" className=\"text-secondary\">Sunday</option>\r\n                                        <option value=\"Monday\" className=\"text-secondary\">Monday</option>\r\n                                        <option value=\"Tuesday\" className=\"text-secondary\">Tuesday</option>\r\n                                        <option value=\"Wednesday\" className=\"text-secondary\">Wednesday</option>\r\n                                        <option value=\"Thursday\" className=\"text-secondary\">Thursday</option>\r\n                                        <option value=\"Friday\" className=\"text-secondary\">Friday</option>\r\n                                        <option value=\"Saturday\" className=\"text-secondary\">Saturday</option>\r\n                                    </Form.Select>\r\n                                    <Button variant=\"success\" className=\"text-center w-100\" type=\"submit\">\r\n                                        Update list\r\n                                    </Button>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>}\r\n                        {listtodo && <div className=\"p-2\">\r\n                            {todolists.length === 0 ? <div>\r\n                                <p className=\"font-500 font-18 text-danger my-2 d-none d-md-block\">You have nothing on your todolist</p>\r\n                                <p className=\"font-500 font-14 text-danger my-2 d-md-none\">You have nothing on your todolist</p>\r\n                                <Button variant=\"success\" className=\"text-center\" onClick={handleAddtodo}>\r\n                                    Create todolist\r\n                                </Button>\r\n                            </div>: todolists.map(todo =>(\r\n                                    <Row className=\"my-2\" key={todo.id}>\r\n                                        <Col className=\"font-300 font-14 pointer text-secondary\">{todo.day}</Col>\r\n                                        <Col className=\"font-300 font-14 pointer text-secondary\">{todo.note}</Col>\r\n                                        <Col ><Image src= {delete1} className=\"font-300 font-14 delete\" id={todo.id} onClick={handleDelete} fluid/></Col>\r\n                                    </Row>\r\n                                ))}\r\n                        </div>}\r\n                        {\r\n                            calenderTodo && <div className=\"calender\">\r\n                                <p className=\"d-md-none d-flex justify-content-center font-300 font-14\">Set a reminder for&nbsp;<span className='fw-bold text-success'>{moment(dateState).format('Do MMMM YYYY')}</span></p>\r\n                                <div className=\"d-none d-md-flex justify-content-center\">\r\n                                    <Calendar value={dateState} onChange={changeDate} className=\"text-success m-5 border rounded\" />\r\n                                </div>\r\n                                <div className=\"d-md-none d-flex justify-content-center\">\r\n                                    <Calendar value={dateState} onChange={changeDate} className=\"text-success m-5 border rounded\" />\r\n                                </div>\r\n                                <p className=\"d-none d-md-flex justify-content-center\">Set a reminder for&nbsp;<span className='fw-bold text-success'>{moment(dateState).format('Do MMMM YYYY')}</span></p>\r\n                                <div className='m-2 m-md-5 mb-5 calender-form'>\r\n                                    <Form onSubmit={handleSubmittt} className='calender-form'>\r\n                                        <FloatingLabel controlId=\"floatingTextarea2\" label=\"Reminder\">\r\n                                            <Form.Control as=\"textarea\" className=\"calender-form\" placeholder=\"Leave a comment here\" value={reminder} required onChange={(e) => setReminder(e.target.value)} ref={reminderRef} style={{ height: '200px' }}/>\r\n                                        </FloatingLabel>\r\n                                        <Button variant=\"success\" className=\"text-center w-100\" type=\"submit\">\r\n                                            Save\r\n                                        </Button>\r\n                                    </Form>\r\n                                </div>\r\n                                <div className='m-2 m-md-5'>\r\n                                    <p className=\"font-500 font-18 text-secondary my-2 d-none d-md-block\">Reminders</p>\r\n                                    <p className=\"font-500 font-14 text-secondary my-2 d-md-none\">Reminders</p>\r\n                                        {reminders.length === 0 ? <div>\r\n                                            <p className=\"font-500 font-18 text-danger my-2 d-none d-md-block\">You have nothing on reminders</p>\r\n                                            <p className=\"font-500 font-14 text-danger my-2 d-md-none\">You have nothing on reminders</p>\r\n                                            <Button variant=\"success\" className=\"text-center\" onClick={handleRef1}>\r\n                                                Set Reminder\r\n                                            </Button>\r\n                                        </div> :\r\n                                        reminders.map(reminder =>(\r\n                                            <Row className=\"my-2 d-flex justify-content-between\" key={reminder.id}>\r\n                                                <Col sm className=\"font-500 font-18 d-none d-md-block text-secondary\">{reminder.date}</Col>\r\n                                                <Col sm className=\"font-300 font-14 d-md-none text-secondary\">{reminder.date}</Col>\r\n                                                <Col sm className=\"font-500 font-18 d-none d-md-block text-secondary\">{reminder.remind}</Col>\r\n                                                <Col sm className=\"font-300 font-14 d-md-none text-secondary\">{reminder.remind}</Col>\r\n                                                <Col><Image src= {delete1} id={reminder.id} className=\"delete\" onClick={handleDeleteee} fluid/></Col>\r\n                                            </Row>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            notebookTodo && <div className=\"notebook p-3\">\r\n                                <div className='my-4'>\r\n                                    <Form onSubmit={handleSubmitt}>\r\n                                        <FloatingLabel controlId=\"floatingTextarea2\" label=\"Note\">\r\n                                            <Form.Control as=\"textarea\" placeholder=\"Leave a comment here\" value={notebookk} required onChange={(e) => setNotebookk(e.target.value)} ref={notebookRef} style={{ height: '200px' }}/>\r\n                                        </FloatingLabel>\r\n                                        <Button variant=\"success\" className=\"text-center w-100\" type=\"submit\">\r\n                                            Save\r\n                                        </Button>\r\n                                    </Form>\r\n                                </div>\r\n                                <p className=\"font-500 font-18 text-secondary my-2 d-none d-md-block\">My Notes</p>\r\n                                <p className=\"font-500 font-14 text-secondary my-2 d-md-none\">My Notes</p>\r\n                                {\r\n                                    notes.length === 0 ? <div>\r\n                                        <p className=\"font-500 font-18 text-danger my-2 d-none d-md-block\">You have no notes</p>\r\n                                        <p className=\"font-500 font-14 text-danger my-2 d-md-none\">You have no notes</p>\r\n                                        <Button variant=\"success\" className=\"text-center\" onClick={handleRef2}>\r\n                                            Write a note\r\n                                        </Button>\r\n                                    </div> :\r\n                                    notes.map(note => (\r\n                                        <Row className=\"my-2\" key={note.id}>\r\n                                            <Col sm className=\"font-500 font-18 d-none d-md-block text-secondary\">{note.note}</Col>\r\n                                            <Col sm className=\"font-300 font-14 d-md-none text-secondary\">{note.note}</Col>\r\n                                            <Col><Image src= {delete1} id={note.id} className=\"delete\" onClick={handleDeletee} fluid/></Col>\r\n                                        </Row>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        }\r\n                        {\r\n                            profileTodo && <div className=\"profile\">\r\n                                <div>\r\n                                    <p className=\"font-500 font-18 text-secondary my-2 d-none d-md-block\"></p>\r\n                                    <p className=\"font-500 font-14 text-secondary my-2 d-md-none\"></p>\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <div>\r\n                                        <p className=\"font-500 font-18 text-secondary my-2 d-none d-md-block\">Todolist</p>\r\n                                        <p className=\"font-500 font-14 text-secondary my-2 d-md-none\">Todolist</p>\r\n                                        {todolists.length === 0 ? <div>\r\n                                            <p className=\"font-500 font-18 text-danger my-2 d-none d-md-block\">You have nothing on your todolist</p>\r\n                                            <p className=\"font-500 font-14 text-danger my-2 d-md-none\">You have nothing on your todolist</p>\r\n                                            <Button variant=\"success\" className=\"text-center\" onClick={handleTodolist}>\r\n                                                Create todolist\r\n                                            </Button>\r\n                                        </div> : todolists.map(todo =>(\r\n                                            <Row className=\"my-2\" key={todo.id}>\r\n                                                <Col className=\"font-300 font-14 pointer text-secondary\">{todo.day}</Col>\r\n                                                <Col className=\"font-300 font-14 pointer text-secondary\">{todo.note}</Col>\r\n                                                <Col ><Image src= {delete1} className=\"font-300 font-14 delete\" id={todo.id} onClick={handleDelete} fluid/></Col>\r\n                                            </Row>\r\n                                        ))}\r\n                                        </div>\r\n                                    <div>\r\n                                        <p className=\"font-500 font-18 text-secondary my-2 d-none d-md-block\">My notes</p>\r\n                                        <p className=\"font-500 font-14 text-secondary my-2 d-md-none\">My notes</p>\r\n                                        {\r\n                                        notes.length === 0 ? <div>\r\n                                            <p className=\"font-500 font-18 text-danger my-2 d-none d-md-block\">You have no notes</p>\r\n                                            <p className=\"font-500 font-14 text-danger my-2 d-md-none\">You have no notes</p>\r\n                                            <Button variant=\"success\" className=\"text-center\" onClick={handleNotebook}>\r\n                                                Write a note\r\n                                            </Button>\r\n                                        </div> :\r\n                                        notes.map(note => (\r\n                                            <Row className=\"my-2\" key={note.id}>\r\n                                                <Col sm className=\"font-500 font-18 d-none d-md-block text-secondary\">{note.note}</Col>\r\n                                                <Col sm className=\"font-300 font-14 d-md-none text-secondary\">{note.note}</Col>\r\n                                                <Col><Image src= {delete1} id={note.id} className=\"delete\" onClick={handleDeletee} fluid/></Col>\r\n                                            </Row>\r\n                                        ))\r\n                                        }\r\n                                    </div>\r\n                                    <div>\r\n                                        <p className=\"font-500 font-18 text-secondary my-2 d-none d-md-block\">Reminders</p>\r\n                                        <p className=\"font-500 font-14 text-secondary my-2 d-md-none\">Reminders</p>\r\n                                        {reminders.length === 0 ? <div>\r\n                                                <p className=\"font-500 font-18 text-danger my-2 d-none d-md-block\">You have nothing on reminders</p>\r\n                                                <p className=\"font-500 font-14 text-danger my-2 d-md-none\">You have nothing on reminders</p>\r\n                                                <Button variant=\"success\" className=\"text-center\" onClick={handleCalender}>\r\n                                                    Set Reminder\r\n                                                </Button>\r\n                                            </div> :\r\n                                            reminders.map(reminder =>(\r\n                                                <Row className=\"my-2 d-flex justify-content-between\" key={reminder.id}>\r\n                                                    <Col sm className=\"font-500 font-18 d-none d-md-block text-secondary\">{reminder.date}</Col>\r\n                                                    <Col sm className=\"font-300 font-14 d-md-none text-secondary\">{reminder.date}</Col>\r\n                                                    <Col sm className=\"font-500 font-18 d-none d-md-block text-secondary\">{reminder.remind}</Col>\r\n                                                    <Col sm className=\"font-300 font-14 d-md-none text-secondary\">{reminder.remind}</Col>\r\n                                                    <Col><Image src= {delete1} id={reminder.id} className=\"delete\" onClick={handleDeleteee} fluid/></Col>\r\n                                                </Row>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport Navbar from './Navbar'\r\nimport Sidebar from './Sidebar'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Navbar />\r\n            <Sidebar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import {useState} from 'react'\r\n\r\nconst usePasswordShow = () => {\r\n    const [passwordShow, setPasswordShow] = useState(false)\r\n    \r\n    const showPassword = () => {\r\n        setPasswordShow(!passwordShow)\r\n    }\r\n\r\n    return { passwordShow, showPassword }\r\n}\r\n\r\nexport default usePasswordShow\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Container, Row, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport usePasswordShow from './usePasswordShow';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst Login = () => {\r\n    const { passwordShow, showPassword } = usePasswordShow();\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(username === 'timileyinbabalola42@gmail.com' && password === 'babalolatimileyin'){\r\n            navigate('/home');\r\n        }\r\n        else{\r\n            setError(\"Incorrect username or password\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login bg-light\">\r\n            <Navbar />\r\n            <Container className=\"\">\r\n                <div className=\"p-md-2 py-lg-5 bg-light\">\r\n                    <Row>\r\n                        <div className=\"col-12 col-md-6 col-lg-7 px-md-5 mt-5\">\r\n                            <h5 className=\"font-700 pb-2 d-none d-md-block\">My Schedule makes life easier by helping you plan your task and schedule ahead of time and also a platform for time management tips.</h5>\r\n                            <h5 className=\"font-500 font-14 pb-2 d-md-none\">My Schedule makes life easierby helping you plan your task and schedule ahead of time and also a platform for time management tips.</h5>\r\n                            <p className=\"d-none d-md-block\">Notebook, calender, presentation Platform, Reminders, Appointments, Resolutions.</p>\r\n                            <p className=\"d-md-none font-14 font-300\">Notebook, calender, presentation Platform, Reminders, Appointments, Resolutions.</p>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-5\">\r\n                            <div className=\"shadow px-3 py-3 bg-white border-10\">\r\n                                <h4 className=\"text-success logo text-center\">My Schedule!</h4>\r\n                                <h5 className=\"font-500 pb-2 text-center mt-5\">Sign in to your account</h5>\r\n                                <div>\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label className=\"font-15\">username or email</Form.Label>\r\n                                            <Form.Control type=\"email\" placeholder=\"username\" required value={username} onChange={e => setUsername(e.target.value)} />\r\n                                            <Form.Text className=\"text-muted\">\r\n                                            \r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                            <Form.Label className=\"font-15\">Password</Form.Label>\r\n                                            <Form.Control type={passwordShow ? \"text\" : \"password\"} className=\"border-bottom\" placeholder=\"Password\" required value={password} onChange={e => setPassword(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                                            <Form.Check type=\"checkbox\" className=\"font-15\" onClick={showPassword} label=\"show password\" />\r\n                                        </Form.Group>\r\n                                        <p className=\"font-14 text-danger\">{error}</p>\r\n                                        <Button variant=\"success\" type=\"submit\" className=\"text-center w-100\">\r\n                                            Login\r\n                                        </Button>\r\n                                        <Link to=\"/signup\">\r\n                                            <Button variant=\"\" className=\"text-center w-100 text-success border-1 border-success border-rounded my-3 hover\">\r\n                                            Create an account\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, {useState} from 'react'\r\nimport { Row, Form,  Button, Container } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Navbar from './Navbar';\r\nimport usePasswordShow from './usePasswordShow';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst SignUp = () => {\r\n    const { passwordShow, showPassword } = usePasswordShow();\r\n    const navigate = useNavigate();\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [match, setMatch] = useState(null)\r\n    const [text, setText] = useState('')\r\n\r\n\r\n    const handleMatch = () => {\r\n        if(password === confirmPassword){\r\n            setMatch(true)\r\n        } else {\r\n            setMatch(false)\r\n            setText('password does not match')\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        navigate('/')\r\n        alert('account created')\r\n        localStorage.setItem('email', email);\r\n        localStorage.setItem('password', password)\r\n    }\r\n\r\n    return (\r\n        <div className=\"login bg-light\">\r\n            <Navbar />\r\n            <Container>\r\n                <Row className=\"mt-3\">\r\n                    <div className=\"col-12 col-md-3 col-lg-4\">\r\n                        \r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <div className=\"shadow px-3 py-3 rounded border-10 bg-white\">\r\n                            <h4 className=\"text-success logo text-center\">My Schedule!</h4>\r\n                            <h5 className=\"font-500 pb-2 text-center mt-5 font-\">Sign Up for <span className=\"text-success logo\">My Schedule!</span></h5>\r\n                            <div>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Control type=\"text\" placeholder=\"firstname\" value={firstname} onChange={e => setFirstname(e.target.value)} required/>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Control type=\"text\" placeholder=\"lastname\" value={lastname} onChange={e => setLastname(e.target.value)} required/>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Control type=\"email\" placeholder=\"email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                        <Form.Control type={passwordShow ? \"text\" : \"password\"} className=\"border-bottom\" placeholder=\"password\" value={password} onChange={e => setPassword(e.target.value)} required/>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                        <Form.Control type={passwordShow ? \"text\" : \"password\"} className=\"border-bottom\" placeholder=\" Confirm password\" value={confirmPassword} onKeyUp={handleMatch} onChange={e => setConfirmPassword(e.target.value)} required/>\r\n                                    </Form.Group>\r\n                                    {match? (<p className=\"font-14 text-success\">correct password</p>) : <p className=\"font-14 text-danger\">{text}</p>}\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                                        <Form.Check type=\"checkbox\" className=\"font-15\" onClick={showPassword} label=\"show password\" />\r\n                                    </Form.Group>\r\n                                    <Button variant=\"success\" type=\"submit\" className=\"text-center w-100\">\r\n                                        Sign Up\r\n                                    </Button>                                \r\n                                    <Link to=\"/\">\r\n                                        <Button variant=\"\" className=\"text-center w-100 text-success border-1 border-success border-rounded my-3 hover\">\r\n                                            Already have an account? Login\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-3 col-lg-4\">\r\n                        \r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass Graph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n          categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [30, 40, 45, 50, 49, 60, 70, 91]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\">\r\n          <div className=\"mixed-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Graph from \"./components/Graph\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/signup\" element={<SignUp />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/graph\" element={<Graph />} />\n        </Routes>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'react-calendar/dist/Calendar.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyAoqKl-PnMPhh53QLxEh42fNDt4fn1Br2c\",\n  authDomain: \"myschedule-3454a.firebaseapp.com\",\n  projectId: \"myschedule-3454a\",\n  storageBucket: \"myschedule-3454a.appspot.com\",\n  messagingSenderId: \"931961956437\",\n  appId: \"1:931961956437:web:8305cafc58e486eecd4cdc\"\n};\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}